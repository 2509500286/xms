#pragma checksum "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ee129f69bb539bf62c2f90b5ee3c420b9ec14f90"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Filter_FilterDialog), @"mvc.1.0.view", @"/Views/Filter/FilterDialog.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms.Infrastructure;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms.Infrastructure.Utility;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "G:\projects\xms_v2\Presentation\Xms.Web\Views\_ViewImports.cshtml"
using Xms.Web.Framework;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ee129f69bb539bf62c2f90b5ee3c420b9ec14f90", @"/Views/Filter/FilterDialog.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b0011d9a8909cdacaf42363c4ba3a5683bc0ece", @"/Views/_ViewImports.cshtml")]
    public class Views_Filter_FilterDialog : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Xms.Web.Models.FilterModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
  
    DialogModel dialogModel = ViewData["DialogModel"] as DialogModel;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!--（Modal） -->
<div class=""modal fade"" id=""filtersModal"" tabindex=""-1"" role=""dialog""
     aria-labelledby=""filtersModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal""
                        aria-hidden=""true"">
                    ×
                </button>
                <h4 class=""modal-title"" id=""filtersModalLabel"">
                    <span class=""glyphicon glyphicon-filter""></span> ");
#nullable restore
#line 20 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                                                Write(app.T["filter_condition"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(" - ");
#nullable restore
#line 20 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                                                                             Write(Model.AttributeMeta.LocalizedName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </h4>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"" id=""filterContainer"">
                    <div class=""form-group"">
                        <div class=""col-sm-3"">
                            <select class=""input-sm"" name=""conditionoperator""></select>
                        </div>
                        <div class=""col-sm-9"">
                            <input type=""text"" class=""form-control input-sm"" name=""value"" disabled=""disabled"" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <div class=""col-sm-12"">
                            <label>
                                <input type=""radio"" name=""logicaloperator"" value=""0"" data-value=""and"" checked /> ");
#nullable restore
#line 36 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                                                                                            Write(app.T["filter_and"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"radio\" name=\"logicaloperator\" value=\"1\" data-value=\"or\" /> ");
#nullable restore
#line 39 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                                                                                   Write(app.T["filter_or"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                            </label>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <div class=""col-sm-3"">
                            <select class=""input-sm"" name=""conditionoperator""></select>
                        </div>
                        <div class=""col-sm-9"">
                            <input type=""text"" class=""form-control input-sm"" name=""value"" disabled=""disabled"" />
                        </div>
                    </div>
                    <script");
            BeginWriteAttribute("src", " src=\"", 2385, "\"", 2455, 2);
            WriteAttributeValue("", 2391, "/content/js/jquery.form.js?v=", 2391, 29, true);
#nullable restore
#line 51 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
WriteAttributeValue("", 2420, app.PlatformSettings.VersionNumber, 2420, 35, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@"></script>
                    <script>
                        function digitsValue(e){
                            var val=$(e).val();
                            var check=true;
                            var reg = new RegExp(/^\+?[1-9][0-9]*$/);
                            if(!reg.test(val)||val==''){
                                if($(e).next('label[name=""digitsTip""]').length<=0){
                                    $('<label name=""digitsTip"">'+LOC_VALIDATION_DIGIT+'</label>').insertAfter($(e));
                                }
                                check=false;
                            }
                            else{
                                $(e).next('label[name=""digitsTip""]').remove();
                                check=true;
                            }
                            return check;
                        }
                        var LOC_FILTER_CONDITION_OPERATOR_SELECT = '");
#nullable restore
#line 69 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                                               Write(app.T["filter_condition_operator_select"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n                        var LOC_VALIDATION_DIGIT = \'");
#nullable restore
#line 70 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                               Write(app.T["validation_digit"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n                        var FilterDialogModel = {\r\n                            pageUrl: \'");
#nullable restore
#line 72 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                 Write(app.Url);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                            callback : ");
#nullable restore
#line 73 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                  Write(dialogModel.CallBack.IfEmpty("null"));

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                            attributeName : \'");
#nullable restore
#line 74 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                        Write(Model.Field);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                            filter : ");
#nullable restore
#line 75 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                Write(Html.Raw(Model.Filter != null ? Model.Filter.SerializeToJson(true) : "null"));

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                            dialog : $(\'#filtersModal\'),\r\n                            operators : Xms.Fetch.ConditionOperators[\"");
#nullable restore
#line 77 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                                                 Write(Model.DataType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"],\r\n                            datatype : \"");
#nullable restore
#line 78 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                   Write(Model.DataType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                            attributeMetaDatas : ");
#nullable restore
#line 79 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
                                            Write(Html.Raw(Model.AttributeMeta.SerializeToJson()));

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
                            dialog_return: function () {
                                var digitscheck=true;
                                $('#filterContainer').find('input[name=value]').each(function(i,n){
                                    if($(n).attr('data-num')==true||$(n).attr('data-num')=='true'){
                                        digitscheck= digitsValue($(n));
                                        if(digitscheck==false){
                                            Xms.Web.Alert(false, LOC_VALUE_NOTVALID);
                                            return false;
                                        }
                                    }
                                });
                                if(digitscheck==false){
                                    return false;
                                }
                                var filter = new Xms.Fetch.FilterExpression();
                                $('#filterContainer').find('.form-group').each(f");
            WriteLiteral(@"unction (i, n) {
                                    var row = $(n);
                                    var conditionoperator = Xms.Web.SelectedValue(row.find('select[name=conditionoperator]'));
                                    var logicaloperator = row.find('input[name=logicaloperator]:checked').val();
                                    //console.log(row,conditionoperator,logicaloperator);
                                    if (conditionoperator && conditionoperator != '') {
                                        var condition = new Xms.Fetch.ConditionExpression();
                                        condition.AttributeName = FilterDialogModel.attributeName;
                                        condition.Operator = parseInt(conditionoperator);
                                        var v = row.find('input[name=value]').attr('data-value') || row.find('input[name=value]').val();
                                        if(v && v != '') condition.Values.push(v);
                        ");
            WriteLiteral(@"                filter.Conditions.push(condition);
                                        //console.log(condition);
                                    }
                                    else if (logicaloperator) {
                                        filter.FilterOperator = parseInt(logicaloperator);
                                    }
                                });
                                console.log(filter);
                                if(typeof(FilterDialogModel.callback) == 'function'){
                                    FilterDialogModel.callback(FilterDialogModel.attributeName,filter);
                                }
                                Xms.Web.CloseDialog('#filtersModal');
                            },
                            bindSelected: function (result, inputid){
                                console.log(result,inputid);
                                $('#' + inputid).val(result[0].name);
                                $('#' + input");
            WriteLiteral(@"id).attr('data-value',result[0].id);
                            },
                            bindMoreSelected: function (result, inputid){
                                var rName='';
                                var rId='';
                                for(var i=0;i<result.length;i++){
                                    console.log(result,inputid);
                                    rName+=result[i].name;
                                    rId+=result[i].id;
                                    if(i!=result.length-1){
                                        rName+=',';
                                        rId+=',';
                                    }
                                }
                                $('#' + inputid).val(rName);
                                $('#' + inputid).attr('data-value',rId);
                            }
                        };
                        console.log(FilterDialogModel.attributeMetaDatas);
                        $(fu");
            WriteLiteral(@"nction () {
                            //console.log(1);
                            FilterDialogModel.dialog.modal({
                                keyboard: true
                            });
                            FilterDialogModel.dialog.on('hidden.bs.modal', function () {
                                Xms.Web.CloseDialog('#filtersModal');
                            });
                            //操作符
                            var op = new Array();
                            op.push('<option data-value="""" value="""">--'+LOC_FILTER_CONDITION_OPERATOR_SELECT+'--</option>');
                            $(FilterDialogModel.operators).each(function(i, n){
                                op.push('<option data-value=""'+n[0]+'"" value=""'+n[1]+'"">'+n[2]+'</option>');
                            });

                            //禁用输入框
                            var disabledArr=['Last7Days','LastWeek','LastMonth','LastYear','LastYear','NextWeek','NextMonth','NextYear','ThisWeek','This");
            WriteLiteral(@"Month','ThisYear','Today','Tomorrow','Yesterday'];
                            //显示时间控件
                            var showDatepicker=['Equal','NotEqual','GreaterThan','LessThan','GreaterEqual','LessEqual','OnOrAfter','OnOrBefore'];
                            //无需查找按钮
                            var noFindButton=['BeginsWith','DoesNotBeginWith','EndsWith','DoesNotEndWith','Like','NotLike'];
                            //需要下拉 多选
                            var moreSelect=[];
                            //包含和不包含
                            var includeNull=['NotNull','Null'];

                            //操作符改变事件
                            $('#filterContainer').find('select[name=conditionoperator]').each(function(i, n){
                                $(n).html(op.join('\n'));
                                $(n).bind('change', function(){
                                    var v = Xms.Web.SelectedValue($(this));
                                    var dataval=$(this).find('option:selected').");
            WriteLiteral(@"attr('data-value');
                                    var id = FilterDialogModel.datatype + Math.round(new Date().getTime() / 1000);
                                    var input = $(this).parents('.form-group').find('input[name=value]');
                                    input.prop('id', id);
                                    if(v == Xms.Fetch.ConditionOperator.NotNull || v == Xms.Fetch.ConditionOperator.Null || v == null || v == ''||$.inArray(dataval,disabledArr)!=-1){
                                        if(input.parents('.typeahead__container').length>0){
                                            input.parents('.typeahead__container').replaceWith('<input type=""text"" class=""form-control input-sm"" name=""value"" disabled=""disabled"" >');
                                        }else{
                                            input.val('').prop('disabled','disabled');
                                        }
                                    }
                                    else ");
            WriteLiteral(@"if(v != null && v != ''){
                                        input.removeProp('disabled');
                                        //根据字段类型生成输入框
                                        switch(FilterDialogModel.datatype){
                                            case ""lookup"":
                                                if($.inArray(dataval,noFindButton)!=-1){
                                                    if(input.parents('.typeahead__container').length>0){
                                                        input.parents('.typeahead__container').replaceWith('<input type=""text"" class=""form-control input-sm"" name=""value"" >');
                                                    }else{
                                                        input.removeProp('disabled');
                                                    }
                                                }
                                                else if($.inArray(dataval,moreSelect)!=-1){
                ");
            WriteLiteral(@"                                    input.lookup({
                                                        dialog: function(){
                                                            Xms.Web.OpenDialog('/entity/RecordsDialog?entityid='+FilterDialogModel.attributeMetaDatas.referencedentityid+'&singlemode=true&inputid=' + id, 'FilterDialogModel.bindMoreSelected')
                                                        }
                                                        ,clear: function(){
                                                            $('#' + id).val('');
                                                            $('#' + id).siblings(':input').val('');
                                                        },
                                                        disabled:true
                                                    });
                                                }
                                                else{
                                        ");
            WriteLiteral(@"            input.lookup({
                                                        dialog: function(){
                                                            Xms.Web.OpenDialog('/entity/RecordsDialog?entityid='+FilterDialogModel.attributeMetaDatas.referencedentityid+'&singlemode=true&inputid=' + id, 'FilterDialogModel.bindSelected')
                                                        }
                                                        ,clear: function(){
                                                            $('#' + id).val('');
                                                            $('#' + id).siblings(':input').val('');
                                                        },
                                                        disabled:true
                                                    });
                                                }
                                                break;
                                            case ""owner"":
        ");
            WriteLiteral(@"                                        if($.inArray(dataval,noFindButton)!=-1){
                                                    if(input.parents('.typeahead__container').length>0){
                                                        input.parents('.typeahead__container').replaceWith('<input type=""text"" class=""form-control input-sm"" name=""value"" >');
                                                    }else{
                                                        input.removeProp('disabled');
                                                    }
                                                }
                                                else if($.inArray(dataval,moreSelect)!=-1){
                                                    input.lookup({
                                                        dialog: function(){
                                                            Xms.Web.OpenDialog('/entity/RecordsDialog?entityid='+FilterDialogModel.attributeMetaDatas.referencedentityid+");
            WriteLiteral(@"'&singlemode=true&inputid=' + id, 'FilterDialogModel.bindMoreSelected',null,function(){
                                                                input.removeProp('disabled');
                                                            })
                                                        }
                                                        ,clear: function(){
                                                            $('#' + id).val('');
                                                            $('#' + id).siblings(':input').val('');
                                                        },
                                                        disabled:true
                                                    });
                                                }
                                                else{
                                                    input.lookup({
                                                        dialog: function(){
                  ");
            WriteLiteral(@"                                          Xms.Web.OpenDialog('/entity/RecordsDialog?entityid='+FilterDialogModel.attributeMetaDatas.referencedentityid+'&singlemode=true&inputid=' + id, 'FilterDialogModel.bindSelected',null,function(){
                                                                input.removeProp('disabled');
                                                            })
                                                        }
                                                        ,clear: function(){
                                                            $('#' + id).val('');
                                                            $('#' + id).siblings(':input').val('');
                                                        },
                                                        disabled:true
                                                    });
                                                }
                                                break;
               ");
            WriteLiteral(@"                             case ""customer"":
                                                input.lookup({
                                                    dialog: function(){
                                                        Xms.Web.OpenDialog('/entity/RecordsDialog?entityid='+FilterDialogModel.attributeMetaDatas.referencedentityid+'&singlemode=true&inputid=' + id, 'FilterDialogModel.bindSelected')
                                                    }
                                                    ,clear: function(){
                                                        $('#' + id).val('');
                                                        $('#' + id).siblings(':input').val('');
                                                    },
                                                    disabled:true
                                                });
                                                break;
                                            case ""picklist"":
         ");
            WriteLiteral(@"                                       input.picklist({
                                                    displaytype: 'select'
                                                    , required: true
                                                    ,items: FilterDialogModel.attributeMetaDatas.optionset.items//[{value:0, text:'已提交'},{value:1, text:'审核中'}]
                                                });
                                                if($.inArray(dataval,moreSelect)!=-1){
                                                    input.siblings('select').prop('multiple','multiple');
                                                    input.siblings('select').prop('size',4);
                                                }
                                                else{
                                                    input.siblings('select').removeProp('multiple');
                                                    input.siblings('select').removeProp('size');
             ");
            WriteLiteral(@"                                   }
                                                break;
                                            case ""bit"":
                                                input.picklist({
                                                    displaytype: 'select'
                                                    , required: true
                                                    ,items: FilterDialogModel.attributeMetaDatas.picklists//[{value:0, text:'否'},{value:1, text:'是'}]
                                                });
                                                break;
                                            case ""datetime"":
                                                input.unbind('keyup');
                                                input.removeAttr('data-num');
                                                if($.inArray(dataval,showDatepicker)!=-1){
                                                    input.addClass('datepicker');
              ");
            WriteLiteral(@"                                      $('.datepicker').datepicker({
                                                        autoclose: true
                                                        , clearBtn: true
                                                        , format: ""yyyy-mm-dd""
                                                        , language: ""zh-CN""
                                                    });
                                                }else{
                                                    input.removeClass('datepicker');
                                                    input.attr('data-num',true);
                                                    input.replaceWith(input.clone().bind('keyup',function(){digitsValue(this)}));
                                                }
                                                break;
                                            default:
                                                input.removeProp('disabled');");
            WriteLiteral(@"
                                                break;
                                        }
                                    }
                                });
                            });

                            //绑定条件
                            if (FilterDialogModel.filter && FilterDialogModel.filter.Conditions&& FilterDialogModel.filter.Conditions.length > 0){
                                $('#filterContainer').find('input[name=logicaloperator][value='+FilterDialogModel.filter.FilterOperator+']').prop('checked',true);
                                var idx = 0;
                                $('#filterContainer').find('.form-group').each(function (i, n) {
                                    var row = $(n);
                                    if(row.find('select[name=conditionoperator]').length > 0){
                                        if(idx>=FilterDialogModel.filter.Conditions.length) return;
                                        var cd = FilterDialogModel.filt");
            WriteLiteral(@"er.Conditions[idx];
                                        if(FilterDialogModel.datatype == 'lookup' || FilterDialogModel.datatype == 'owner' || FilterDialogModel.datatype == 'customer'){
                                            Xms.Web.GetJson('/api/data/Retrieve/ReferencedRecord/' + FilterDialogModel.attributeMetaDatas.referencedentityid + '/' + cd.Values.join(',')
                                                ,null,function(response){
                                                    row.find('input[name=value]').val(response.content.name);
                                                });
                                        }
                                        else{
                                            row.find('input[name=value]').val(cd.Values.join(','));
                                        }
                                        row.find('input[name=value]').attr('data-value',cd.Values.join(','));
                                        row.find('select[name=c");
            WriteLiteral(@"onditionoperator] option[value='+cd.Operator+']').prop('selected',true).trigger('change');

                                        idx++;
                                    }
                                });
                            }
                        });
                    </script>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default""
                        data-dismiss=""modal"">
                    <span class=""glyphicon glyphicon-remove""></span>
                    ");
#nullable restore
#line 349 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
               Write(app.T["dialog_close"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary\" onclick=\"FilterDialogModel.dialog_return()\">\r\n                    <span class=\"glyphicon glyphicon-ok\"></span>\r\n                    ");
#nullable restore
#line 353 "G:\projects\xms_v2\Presentation\Xms.Web\Views\Filter\FilterDialog.cshtml"
               Write(app.T["dialog_ok"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </button>\r\n            </div>\r\n        </div><!-- /.modal-content -->\r\n    </div><!-- /.modal-dialog -->\r\n</div><!-- /.modal -->");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Xms.Web.Framework.Context.IWebAppContext app { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Xms.Web.Models.FilterModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
