@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->
    <meta name="description" content="xms">
    <meta name="author" content="xms">
    <link rel="icon" href="/favicon.ico">

    <title>@app.PageTitle</title>

    <!-- Bootstrap core CSS -->
    <link href="/content/css/bootstrap3.3.5/bootstrap.min.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="/content/customize/css/dashboard.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">
    <link href="/content/css/ace.min.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">
    <link href="/content/css/font-awesome.min.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">
    <link href="/content/css/iconfon.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">
    <link href="/content/customize/css/common.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">
    @{await Html.RenderPartialAsync("UserContext"); }
    <!-- Bootstrap core JavaScript ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/content/js/jquery.min.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/bootstrap.min.js?v=@app.PlatformSettings.VersionNumber"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="/content/js/ie10-viewport-bug-workaround.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery.bootstrap.min.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/json2.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery-toast/jquery.toast.min.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/xms.utility.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/xms.jquery.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/xms.web.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery-ui-1.10.3/ui/jquery.ui.core.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery-ui-1.10.3/ui/jquery.ui.widget.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery-ui-1.10.3/ui/jquery.ui.mouse.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery-ui-1.10.3/ui/jquery.ui.draggable.js?v=@app.PlatformSettings.VersionNumber"></script>

    <script>
        jQuery(function () {
            Xms.Web.Loading();
        });
    </script>
    @{await Html.RenderPartialAsync("CommonLabel"); }
    @if (IsSectionDefined("Header"))
    {
        @RenderSection("Header")
    }
    <style>
        body {
            overflow: hidden;
        }
    </style>
</head>

<body data-spy="scroll" data-target="#myScrollspy">
    @*@{await Html.RenderPartialAsync("navbar");}*@
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header col-sm-3 col-md-2">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand navbar-link" href="@("/"+app.OrganizationUniqueName)/home/index" style="white-space: nowrap;"><span class="glyphicon glyphicon-cloud"></span><strong>@app.PlatformSettings.AppName</strong></a>
            </div>
            <div id="navbar" class="navbar-collapse collapse col-md-10 col-sm-9 col-sm-offset-3 col-md-offset-2 pull-right">
                <ul class="nav navbar-nav navbar-pill">
                    <li><a href="@("/"+app.OrganizationUniqueName)/home/index" title="@app.T["homepage"]" target="_blank"><span class="glyphicon glyphicon-home"></span></a></li>
                    <li><a href="@("/"+app.OrganizationUniqueName)/user/ResetMyPassword" title="@app.T["password"]" target="_blank"><span class="glyphicon glyphicon-lock"></span></a></li>
                    <li><a href="@("/"+app.OrganizationUniqueName)/user/usersettings" title="@app.T["usersettings"]" target="_blank"><span class="glyphicon glyphicon-cog"></span></a></li>
                    <li><a href="@("/"+app.OrganizationUniqueName)/account/signout" title="@app.T["signout"]"><span class="glyphicon glyphicon-log-out"></span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container-fluid" id="body">
        <div class="row">
            <div class="col-sm-3 col-md-2 sidebar" id="sidebar" style="padding:0;">
                <ul class="nav nav-sidebar nav-list">
                    <li class="nav-header text-primary dropdown" style="padding-left:5px; cursor:pointer;">
                        <h5 id="solutionsSel" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"><span class="glyphicon glyphicon-briefcase"></span> <strong>@app.T["solution"] - @ViewBag.SolutionName</strong><span class="glyphicon glyphicon-triangle-bottom pull-right" style="padding-right:10px;"></span></h5>
                        <ul class="dropdown-menu" aria-labelledby="solutionsSel" id="solutionsSelList" data-id="@ViewBag.SolutionId"></ul>
                    </li>
                </ul>
                <div style="padding:0 5px;padding-bottom:20px;">
                    <div id="navTree" data-url="@("/"+app.OrganizationUniqueName)/api/schema/entitytree?solutionid=@ViewBag.SolutionId"></div>
                </div>
            </div>
            <div style="padding:0;" class="col-sm-9 col-md-10 col-sm-offset-3 col-md-offset-2" id="main">
                <div id="navPath" class="clearfix hide" style="margin-left: -15px; margin-right: -15px;">

                    <ol class="breadcrumb">
                        <li>&rsaquo;&rsaquo;</li>
                        @foreach (var item in app.PrivilegeTree)
                        {
                            var url = item.Url.IsEmpty() ? "#" : item.Url;
                            @:
                            <li><a href="@url">@item.DisplayName</a></li>
                        }
                        <li class="pull-right">
                            <a href="@app.UrlReferrer"><span class="glyphicon glyphicon-arrow-left"></span>@app.T["goback"]</a>
                        </li>
                    </ol>
                </div>
                <div id="content" class="" style="">
                    @RenderBody()
                    <iframe name="bodyframe" id="bodyframe" frameborder="0" src="@("/"+app.OrganizationUniqueName)/customize/solution/components?solutionid=@ViewBag.SolutionId" onload="iFrameHeight();" width="100%" height="500px"></iframe>
                </div>
                <nav class="navbar navbar-default navbar-fixed-bottom col-sm-offset-3 col-md-offset-2 hide" role="navigation" id="body-footer">
                    <div class="container">
                        <div class="navbar-form navbar-left" id="body-footer-content">
                        </div>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <link href="/content/css/jqtree.css?v=@app.PlatformSettings.VersionNumber" rel="stylesheet">
    <script src="/content/js/tree.jquery.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/jquery.cookie.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script src="/content/js/xms-history.js?v=@app.PlatformSettings.VersionNumber"></script>
    <script>
        function resetResultLast(data) {
            if(!data || !data.length)return [];
            for (var i = 0, len = data.length; i < len; i++) {
                var item = data[i];
                if (item.children) {
                    resetResultLast(item.children);
                    item.link = item.id;
                } else {
                    item.link = item.id;
                    item.id = item.id +"-"+ item.type;
                }
            }
        }
        function iFrameHeight() {
            var ifm = document.getElementById("bodyframe");
            var subWeb = document.frames ? document.frames["bodyframe"].document : ifm.contentDocument;
            if (ifm != null && subWeb != null) {
                ifm.height = $(window).height()-50;//subWeb.body.scrollHeight;
            }
        }

        function runChildrenIframeFunc(func) {
            if (func && typeof func === "function") {
                func();
            }
        }

        var solutionid = '@ViewBag.SolutionId';
        $(function () {
            if (top.location != location) {
                top.location.href = location.href;
            }
            customizeNav.initTree();
            customizeNav.openNode('entities');
            Xms.Web.Event.subscribe('refreshtree', function (e) {
                console.log('refreshtree...');
                customizeNav.$tree.tree('reload');
                customizeNav.openNode('entities');
            });
        });
        var customizeNav = {
            $tree: $('#navTree'),
            initTree: function () {
                customizeNav.$tree.tree({
                    onCreateLi: function (node, $li) {
                        if (node.id != '') {
                            if (node.type == 'solution')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-info-sign");
                            else if (node.type == 'component')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-th-large");
                            else if (node.type == 'entity')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-cog");
                            else if (node.type == 'view')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-th-list");
                            else if (node.type == 'form')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-list-alt");
                            else if (node.type == 'attribute')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-file");
                            else if (node.type == 'ribbonbutton')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-flash");
                            else if (node.type == 'duplicaterules')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-repeat");
                            else if (node.type == 'filterrules')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-check");
                            else if (node.type == 'entitymap')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-transfer");
                            else if (node.type == 'onetomore')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-leaf");
                            else if (node.type == 'moretoone')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-leaf");
                            else if (node.type == 'moretomore')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-leaf");
                            else if (node.type == 'chart')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-stats");
                            else if (node.type == 'optionset')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-bookmark");
                            else if (node.type == 'fieldpermission')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-lock");
                            else if (node.type == 'dashboard')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-dashboard");
                            else if (node.type == 'report')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-file");
                            else if (node.type == 'webresource')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-link");
                            else if (node.type == 'workflow')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-play-circle");
                            else if (node.type == 'autonumber')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-list-alt");
                            else if (node.type == 'plugin')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-inbox");
                            else if (node.type == 'labels')
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-th-list");
                            else
                                $li.find('.jqtree-title').addClass("glyphicon glyphicon-book");
                        }
                    }
                    , dataFilter: function (data) {
                        var results = Xms.Web.GetAjaxResult(data).content;
                        console.log(results);
                        //results[0].label = "实体";
                        for (var i = 0; i < results.length; i++) {
                            results[i].type = 'group';
                            results[i].label = ' ' + results[i].label;
                            for (var j = 0; j < results[i].children.length; j++) {
                                var _this = results[i].children[j];
                                var id = _this.id;
                                results[i].children[j].type = 'entity';
                                results[i].children[j].label = ' ' + results[i].children[j].label;
                                results[i].children[j].children = [
                                    { id: id, label: ' ' + LOC_FORM, type: 'form' }
                                    , { id: id, label: ' ' + LOC_QUERYVIEW, type: 'view' }
                                    , { id: id, label: ' ' + LOC_ATTRIBUTE, type: 'attribute' }
                                    , { id: id, label: ' ' + LOC_RIBBONBUTTON, type: 'ribbonbutton' }
                                    , { id: id, label: ' ' + LOC_CHART, type: 'chart' }
                                    , { id: id, label: ' ' + LOC_DUPLICATERULE, type: 'duplicaterules' }
                                    , { id: id, label: ' ' + LOC_ENTITYMAP, type: 'entitymap' }
                                    , { id: id, label: ' 1:N ' + LOC_RELATIONSHIP, type: 'onetomore' }
                                    , { id: id, label: ' N:1 ' + LOC_RELATIONSHIP, type: 'moretoone' }
                                    , { id: id, label: ' ' + LOC_FILTERRULE, type: 'filterrules' }
                                ];
                            }
                        }
                        results.push({ id: 'optionset', label: ' ' + LOC_OPTIONSET, type: 'optionset' });
                        results.push({ id: 'dashboard', label: ' ' + LOC_DASHBOARD, type: 'dashboard' });
                        results.push({ id: 'report', label: ' ' + LOC_REPORT, type: 'report' });
                        results.push({ id: 'webresource', label: ' ' + LOC_WEBRESOURCE, type: 'webresource' });
                        results.push({ id: 'workflow', label: ' ' + LOC_WORKFLOW, type: 'workflow' });
                        results.push({ id: 'autonumber', label: ' ' + LOC_SERIALNUMBERRULE, type: 'autonumber' });
                        results.push({ id: 'labels', label: ' ' + LOC_LOCALIZATIONLABEL, type: 'labels' });
                        results.push({ id: 'plugin', label: ' ' + LOC_PLUGIN, type: 'plugin' });

                        var a = [];
                        a[0] = { id: 'solution', label: ' ' + LOC_INFORMATION, type: 'solution' };
                        a[1] = { id: 'component', label: ' ' + LOC_COMPONENT, type: 'component' };
                        resetResultLast(results);
                        a[1].children = results;
                        return a;
                    }
                    , selectable: true
                    , saveState: 'admin-customize',
                    openUrl: function (obj) {

                    }
                }),
            customizeNav.$tree.on(
            'tree.click',
            function (event) {
                console.log(event);
                // event.preventDefault();
                if (event.node) {
                    $('.jqtree-tree').find('.jqtree-selected').removeClass('jqtree-selected');
                    var node = event.node;
                    customizeNav.$tree.tree('tree.open', node);

                    $(node.element).addClass('jqtree-selected');
                    //加载组件数据
                    var type = node.type;
                    // console.log(type, node);
                    var hashlink = "/" + type+":"+node.link;
                    if (type == 'solution') {
                        customizeNav.load('/customize/solution/editsolution?id=' + solutionid);
                    }
                    else if (type == 'component') {
                        customizeNav.loadComponents();
                    }
                    else if (type == 'entity') {
                        customizeNav.load('/customize/entity/editentity?id=' + node.link);
                    }
                    else if (type == 'form') {
                        customizeNav.loadForms(node.link);
                    }
                    else if (type == 'view') {
                        customizeNav.loadViews(node.link);
                    }
                    else if (type == 'attribute') {
                        customizeNav.loadAttributes(node.link);
                    }
                    else if (type == 'ribbonbutton') {
                        customizeNav.loadRibbonButtons(node.link);
                    }
                    else if (type == 'duplicaterules') {
                        customizeNav.loadDuplicateRules(node.link);
                    }
                    else if (type == 'entitymap') {
                        customizeNav.loadEntityMaps(node.link);
                    }
                    else if (type == 'onetomore') {
                        customizeNav.loadRelations(node.link,1);
                    }
                    else if (type == 'moretoone') {
                        customizeNav.loadRelations(node.link,2);
                    }
                    else if (type == 'moretomore') {
                        customizeNav.loadRelations(node.link,3);
                    }
                    else if (type == 'filterrules') {
                        customizeNav.loadFilterRules(node.link);
                    }
                    else if (type == 'chart') {
                        customizeNav.loadCharts(node.link);
                    }
                    else if (type == 'optionset') {
                        customizeNav.loadOptionSets();
                    }
                    else if (type == 'fieldpermission') {
                        customizeNav.loadFieldPermissions();
                    }
                    else if (type == 'dashboard') {
                        customizeNav.loadDashboards();
                    }
                    else if (type == 'report') {
                        customizeNav.loadReports();
                    }
                    else if (type == 'webresource') {
                        customizeNav.loadWebResources();
                    }
                    else if (type == 'workflow') {
                        customizeNav.loadWorkflows();
                    }
                    else if (type == 'autonumber') {
                        customizeNav.loadAutoNumberRules();
                    }
                    else if (type == 'plugin') {
                        customizeNav.loadPlugins();
                    }
                    else if (type == 'labels') {
                        customizeNav.loadLabels();
                    }
                    else {
                        customizeNav.loadEntities();
                    }
                    var hash = location.hash;
                    //clearHashLink();
                    location.hash = hashlink;
                }
            }
            );
                //var node = $tree.tree('getNodeById', 'entities');
                //$tree.tree('openNode', node);
            },
            openNode: function (id) {
                try{
                    var node = customizeNav.$tree.tree('getNodeById', id);
                    if (node == null) {
                        window.setTimeout(customizeNav.openNode, 300, id);
                        return;
                    }
                    customizeNav.$tree.tree('openNode', node);
                }catch(e){
                    window.setTimeout(customizeNav.openNode, 300, id);
                }
            },
            load: function (url) {
                url += url.indexOf('?') > 0 ? '&solutionid=' + solutionid : '?solutionid=' + solutionid;
                url = ORG_SERVERURL + url;
                $('#bodyframe').prop('src', url); return;
                Xms.Web.Load(url, function (response) {
                    var data = $(response);
                    var c = data.find('#main');
                    if (c.length > 0)
                        $('#main').replaceWith(c);
                    else
                        $('#main').empty();
                });
            },
            loadComponents: function(){
                this.load('/customize/solution/components');
            },
            loadEntities: function () {
                this.load('/customize/entity/index');
            },
            loadForms: function (entityid) {
                this.load('/customize/systemform/index?entityid=' + entityid);
            },
            loadAttributes: function (entityid) {
                this.load('/customize/attribute/index?entityid=' + entityid);
            },
            loadViews: function (entityid) {
                this.load('/customize/queryview/index?entityid=' + entityid);
            },
            loadOptionSets: function () {
                this.load('/customize/OptionSet/index');
            },
            loadRibbonButtons: function (entityid) {
                this.load('/customize/ribbonbutton/index?entityid=' + entityid);
            },
            loadDuplicateRules: function (entityid) {
                this.load('/customize/duplicaterule/index?entityid=' + entityid);
            },
            loadEntityMaps: function (entityid) {
                this.load('/customize/entitymap/index?entityid=' + entityid);
            },
            loadRelations: function (entityid, type) {
                this.load('/customize/relationship/index?entityid=' + entityid + '&type=' + type);
            },
            loadFilterRules: function (entityid) {
                this.load('/customize/filterrule/index?entityid=' + entityid);
            },
            loadCharts: function (entityid) {
                this.load('/customize/chart/index?entityid=' + entityid);
            },
            loadDashboards: function () {
                this.load('/customize/dashboard/index');
            },
            loadReports: function () {
                this.load('/customize/report/index');
            },
            loadWebResources: function () {
                this.load('/customize/webresource/index');
            },
            loadWorkflows: function () {
                this.load('/customize/flow/index');
            },
            loadAutoNumberRules: function () {
                this.load('/customize/serialnumber/index');
            },
            loadPlugins: function () {
                this.load('/customize/entityplugin/index');
            },
            loadFieldPermissions: function () {
                this.load('/FieldSecurity/index');
            },
            loadLabels: function () {
                this.load('/customize/localizedlabel/index');
            }
        }
        function checkIsCreateFormPage(){
            var href = location.href;
            if(href.indexOf("/customize/systemform/createform")>-1){
                return true;
            }
            return false;
        }

        $.moHistory.setConfig(function (con) {
            //配置页面跳转
            con
                .when("/solution", {
                    controller: function (data) {

                        if (checkIsCreateFormPage()) {
                            if ($("#formModal").length > 0) {
                                setTimeout(function () {
                                    $("#formModal").modal("hide");
                                    customizeNav.load('/customize/solution/editsolution?id=' + solutionid);
                                }, 0);
                            }
                        } else {
                            customizeNav.load('/customize/solution/editsolution?id=' + solutionid);
                        }
                    }
                })
                .when("/component:lid", {
                    controller: function (data) {
                        if (checkIsCreateFormPage()) {
                            if ($("#formModal").length > 0) {
                                setTimeout(function () {
                                    $("#formModal").modal("hide");
                                    customizeNav.loadComponents();
                                }, 0);
                            }
                        } else {
                            customizeNav.loadComponents();
                        }

                    }
                })
                .when("/entity:pid", {
                    controller: function (data) {
                        var reg = data.reg.regexp;
                        var hash = data.hash;
                        var lid = hash.split(":");
                        if (checkIsCreateFormPage()) {
                            if ($("#formModal").length > 0) {
                                setTimeout(function () {
                                    $("#formModal").modal("hide");
                                    customizeNav.load('/customize/entity/editentity?id=' + lid[1]);
                                }, 0);
                            }
                        } else {
                            customizeNav.load('/customize/entity/editentity?id=' + lid[1]);
                        }
                    }
                })
            .when("/form:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if(checkIsCreateFormPage()){
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadForms(lid[1]);
                            },0)
                        }
                    } else {
                        customizeNav.loadForms(lid[1]);
                    }
                }
            })
            .when("/view:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadViews(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadViews(lid[1]);
                    }
                }
            })
            .when("/attribute:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadAttributes(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadAttributes(lid[1]);
                    }
                }
            })
            .when("/ribbonbutton:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadRibbonButtons(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadRibbonButtons(lid[1]);
                    }
                }
            })
            .when("/duplicaterules:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadDuplicateRules(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadDuplicateRules(lid[1]);
                    }
                }
            })
            .when("/chart:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if(checkIsCreateFormPage()){
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadCharts(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadCharts(lid[1]);
                    }
                }
            })
            .when("/optionset:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadOptionSets(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadOptionSets(lid[1]);
                    }
                }
            })
            .when("/fieldpermission:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadOptionSets(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadOptionSets(lid[1]);
                    }
                }
            })
            .when("/dashboard:lid", {
                controller: function (data) {
                    var reg = data.reg.regexp;
                    var hash = data.hash;
                    var lid = hash.split(":");
                    if (checkIsCreateFormPage()) {
                        if ($("#formModal").length > 0) {
                            setTimeout(function () {
                                $("#formModal").modal("hide");
                                customizeNav.loadDashboards(lid[1]);
                            }, 0);
                        }
                    } else {
                        customizeNav.loadDashboards(lid[1]);
                    }
                }
            })
                .when("/report:lid", {
                    controller: function (data) {
                        console.log(data)
                        if (checkIsCreateFormPage()) {
                            if ($("#formModal").length > 0) {
                                setTimeout(function () {
                                    $("#formModal").modal("hide");
                                    customizeNav.loadReports();
                                }, 0);
                            }
                        } else {
                            customizeNav.loadReports();
                        }
                    }
                })
                .when("/dashboard:lid", {
                    controller: function (data) {
                        var reg = data.reg.regexp;
                        var hash = data.hash;
                        var lid = hash.split(":");
                        if (checkIsCreateFormPage()) {
                            if ($("#formModal").length > 0) {
                                setTimeout(function () {
                                    $("#formModal").modal("hide");
                                    customizeNav.loadDashboards(lid[1]);
                                }, 0);
                            }
                        } else {
                            customizeNav.loadDashboards(lid[1]);
                        }
                    }
                })
                .when("/dashboard:lid", {
                    controller: function (data) {
                        var reg = data.reg.regexp;
                        var hash = data.hash;
                        var lid = hash.split(":");
                        if (checkIsCreateFormPage()) {
                            if ($("#formModal").length > 0) {
                                setTimeout(function () {
                                    $("#formModal").modal("hide");
                                    customizeNav.loadDashboards(lid[1]);
                                }, 0);
                            }
                        } else {
                            customizeNav.loadDashboards(lid[1]);
                        }
                    }
                })
            .otherwise("/solution");
        });

        function getSolutions(){
            var _url = '/customize/solution/index?getall=true';
            Xms.Web.GetJson(_url,{},function(response){
                if(response && response.content && response.content.items){
                    console.log(response);
                    buildSolutionsHtml(response.content.items)
                }
            });
        }
        function buildSolutionsHtml(datas){
            var _htmls = [];
            var $solutionsSelList = $('#solutionsSelList');
            $.each(datas,function(key,item){
                _htmls.push('<li class="" data-id="'+item.solutionid+'"> <a href="#" data-id="'+item.solutionid+'"> <span class="glyphicon glyphicon-tasks"></span> '+item.name+'</a></li>');
            });
            $solutionsSelList.html(_htmls.join(''));
            var oldid =$solutionsSelList.attr('data-id');
            $solutionsSelList.on('click',function(e){
                var $this= $(this);
                var $target = $(e.target);
                var solutionid = $target.attr('data-id');
                if(solutionid && oldid!=solutionid){
                    location.href = ORG_SERVERURL + "/Customize/Index?solutionid="+solutionid;
                }
            });
        }

        $(function () {
            $.moHistory.run();//运行路由
            getSolutions()
        });
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>